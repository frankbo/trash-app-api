name: Pipeline

on:
  push:
    branches:
    - master

jobs:
  build-application:
    name: "Go build"
    runs-on: ubuntu-latest
    steps:

    - name: Checkout Repository
      uses: actions/checkout@v2
    
    - name: Setup Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.16.x
    - run: go version
    
    - name: Build Binary
      run: GOOS=linux go build

    - name: Zip Binary
      run: zip function.zip trash-app-api

    - name: Upload Zipped Binary
      uses: actions/upload-artifact@v2
      with:
        name: zipped-binary
        path: function.zip

  terraform-actions:
    name: "Terraform Apply"
    runs-on: ubuntu-latest
    needs: build-application
    defaults:
      run:
        working-directory: ./infra
    steps:

    - name: Checkout Repository
      uses: actions/checkout@v2 
    
    - uses: actions/download-artifact@v2
      with:
        name: zipped-binary
        path: infra

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-central-1

    # Downloads a specific version of Terraform CLI and adds it to PATH
    # Marketplace: https://github.com/marketplace/actions/hashicorp-setup-terraform
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1

    - name: Terraform Fmt
      id: fmt
      run: terraform fmt -check -diff
      continue-on-error: true

    - name: Terraform Init
      id: init
      run: terraform init
      continue-on-error: true

    - name: Terraform Plan
      id: plan
      run: terraform plan -no-color
      continue-on-error: true
    
    - name: Terraform apply
      id: apply
      run: terraform apply -auto-approve -no-color
      continue-on-error: false